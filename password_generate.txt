using System;
using System.Linq;
using System.Text;
using System.Security.Cryptography;

public class PasswordGenerator
{
    private const string UppercaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    private const string LowercaseChars = "abcdefghijklmnopqrstuvwxyz";
    private const string DigitChars = "0123456789";
    private const string SpecialChars = "!@#$%^&*()_-+=<>?";

    public static string GeneratePassword(int length, bool includeUppercase, bool includeLowercase, bool includeDigits, bool includeSpecialChars)
    {
        if (length < 8)
        {
            throw new ArgumentException("Password length should be at least 8 characters.");
        }

        if (!includeUppercase && !includeLowercase && !includeDigits && !includeSpecialChars)
        {
            throw new ArgumentException("At least one character type should be included in the password.");
        }

        string charSet = "";

        if (includeUppercase)
        {
            charSet += UppercaseChars;
        }

        if (includeLowercase)
        {
            charSet += LowercaseChars;
        }

        if (includeDigits)
        {
            charSet += DigitChars;
        }

        if (includeSpecialChars)
        {
            charSet += SpecialChars;
        }

        if (string.IsNullOrEmpty(charSet))
        {
            throw new ArgumentException("At least one character type should be included in the password.");
        }

        using (RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider())
        {
            byte[] randomBytes = new byte[length];
            rng.GetBytes(randomBytes);

            StringBuilder password = new StringBuilder(length);

            foreach (byte b in randomBytes)
            {
                password.Append(charSet[b % charSet.Length]);
            }

            return password.ToString();
        }
    }

    public static void Main()
    {
        try
        {
            string password = GeneratePassword(12, true, true, true, true);
            Console.WriteLine("Generated Password: " + password);
        }
        catch (ArgumentException ex)
        {
            Console.WriteLine("Error: " + ex.Message);
        }
    }
}
